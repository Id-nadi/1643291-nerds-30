@font-face {
  font-family: "Roboto";
  font-style: normal;
  font-weight: 400;
  src: local("Roboto"),
       url("/fonts/roboto.woff2") format("woff2"),
       url("/fonts/roboto.woff") format("woff");
}

@font-face {
  font-family: "Roboto";
  font-style: bold;
  font-weight: 700;
  src: local("Robotobold"),
       url("/fonts/robotobold.woff2") format("woff2"),
       url("/fonts/robotobold.woff") format("woff");
}

@font-face {
  font-family: "Roboto";
  font-style: medium;
  font-weight: 500;
  src: local("Robotomedium"),
       url("/fonts/robotomedium.woff2") format("woff2"),
       url("/fonts/robotomedium.woff") format("woff");
}

/* Variables */
:root {
    --basic-black: #000000;
    --basic-salmon: #FB565A;
    --hover-red: #E74246;
    --active-red:  #D7373B;
    --basic-white: #FFFFFF;
    --basic-green: #00CA74;
    --hover-green: #00BC6C;
    --active-green: #00AA62;
    --basic-yellow: #EFC849;
    --hover-yellow: #EAB534;
    --active-yellow: #E5A722;
    --basic-grey: #A6A6A6;
    --background-grey: #EEEEEE;

    --special-black: #283136;
    --footer-contacts: #666666;
    --footer-promo: #444444;
    --hover-grey: #DFDFDF;
    --social-button-grey: #E1E1E1;
}

.page {
height: 100%;
}

body {
font-family: 'Roboto','Arial', sans-serif;
font-style: normal;
}

a {
  text-decoration: none;
}

img {
  max-width: 100%;
  height: auto;
}

.button {
  font-size: 16px;
  line-height: 18px;
  text-transform: uppercase;
  width: 160px;
  height: 50px;;
  color: var(--basic-white);
  background-color: var(--basic-salmon);
  border-radius: 3px;
  border: 0;
  cursor: pointer;
}

.button-app {
  background-color: var(--basic-green);
}

.button-presentation {
  background-color: var(--basic-yellow);
}

/*Global*/

.page-body {
  min-height: 100%;
  display: grid;
  grid-template-rows: min-content 1fr min-content;
  align-content: start;

}
.page-header {
  display: none;
}

/*Header*/

.header-wrapper {
  background-color: var(--background-grey);
}

.header-center {
  width: 980px;
  margin: 0 auto;
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.header-logo:hover,
.header-logo:focus {
  opacity: 0.7;
}

.header-logo:active {
  opacity: 0.3;
}

.navigation {
  font-size: 16px;
  line-height: 30px;
  color: var(--basic-black);
}

.header-list {
  list-style: none;
  display: flex;
  flex-wrap: wrap;
}

.header-list a,
.user-navigation a {
  text-transform: uppercase;
  font-weight: 500;
  font-size: 16px;
  line-height: 30px;
  color: var(--basic-black);
  display: block;
  padding: 25px 20px;
}

.navigation a:hover,
.navigation a:focus,
.user-navigation a:hover,
.user-navigation a:focus {
  color: var(--basic-salmon);
}

.navigation a:active,
.user-navigation a:active {
  color: var(--basic-black);
  opacity: 0.3;
}

.user-navigation {
  max-width: 100px;
}

.user-navigation .cart {
  padding-left: 50px;
  position: relative;
}


.cart::before {
  position: absolute;
  top: 32px;
  right: 70px;
  content: "";
  width: 15px;
  height: 11px;
  background-image: url(../img/cart-icon.png);
  background-repeat: no-repeat;
  background-position: 0 0;
}
/*Я не понимаю, почему иконка отображается без колес, хотя и в пнг и в свг она с колесами!!!
попыталась нарисовать колеса в цсс, но тогда у меня затык: если я и иконку и кругу задаю псевдоэлемент
"бефо" - либо/либо выходит, одновременно он не показывает и иконку и нарисованные круги, хотя
класс задан правильно в коде: иконка и колесо одновременно*/


/*Description*/

/*Это лучшее, что у меня получилось родить, но не совсем попадает в макет картинка эта долбаная*/

.description-wrapper {
  background: url(../img/nerds-ind-slider.png) top right no-repeat var(--background-grey);
  min-height: 190px;
  padding-bottom: 80px;
  margin-bottom: 80px;
  }

.description {
  width: 960px;
  margin: 0 auto;
  padding: 0;
  display: flex;
}

.description-text {
  display: flex;
  flex-direction: column;
  max-width: 400px;
}

.description-large {
  font-size: 55px;
  line-height: 55px;
  color: var(--basic-black);
  margin-bottom: 25px;
}
.description-small {
  font-size: 16px;
  line-height: 24px;
  color: var(--special-black);
  margin-bottom: 38px;
}

.description-button {
  width: 240px;
}

.description-button:hover,
.description-button:focus {
background-color: var(--hover-red);
}

.description-button:active {
background-color: var(--active-red);
box-shadow: inset 0px 3px 0px rgba(0, 1, 1, 0.1);
color: rgba(255,255,255,0.3);
}

.slider-controls {
display: flex;
align-items: flex-end;
}

.slider-controls button {
  margin: 17px;
  width: 18px;
  height: 18px;
  background-color: var(--basic-white);
  border: 2px solid #ffffff;
  border-radius: 50%;
}

/*А это я пытаюсь на белом кружке нарисовать белый кружок с серой границей, чтобы типа выделенный
кружок, как у активного инпута. Но как ты понимаешь, ничего не вышло))
.slider-controls .current {
  width: 8px;
  height: 8px;
  background-color: var(--basic-white);
  border: 2px solid var(--basic-grey);
}
}*/

/*Features*/

.index-column {
  width:960px;
  margin: 0 auto;
}

.features-column {
  background: url(../img/index-line.png) bottom center no-repeat;
  padding-bottom: 80px;
  margin-bottom: 73px;
}

.features-list {
  list-style: none;
  display: flex;
  justify-content: space-between;
  margin: 0;
  padding: 0;
}

.features-item {
  flex-basis: 300px;
}

.app {
  padding-right: 100px;
  padding-left: 100px;
}

.features-item h2 {
  font-size: 24px;
  line-height: 30px;
  text-transform: uppercase;
}

.features-item p {
  font-size: 16px;
  line-height: 24px;
}

.button-website:focus,
.button-website:hover {
  background-color: var(--hover-red);
}

.button-website:active {
  background-color: var(--active-red);
  box-shadow: inset 0px 3px 0px rgba(0, 1, 1, 0.1);
  color: rgba(255,255,255,0.3);
}

.button-app:focus,
.button-app:hover {
background-color: var(--hover-green);
}

.button-app:active {
  background-color: var(--active-green);
  box-shadow: inset 0px 3px 0px rgba(0, 1, 1, 0.1);
  color: rgba(255,255,255,0.3);
}

.button-presentation:focus,
.button-presentation:hover {
  background-color: var(--hover-yellow);
}

.button-presentation:active {
  background-color: var(--active-yellow);
  box-shadow: inset 0px 3px 0px rgba(0, 1, 1, 0.1);
  color: rgba(255,255,255,0.3);
}

/*Work*/

/*И на этом --всё, что я имею сказать этой части разметки, потому что я НЕ ПОНИМАЮ  ПОЧЕМУ я соблюла все
отступы по макету и тд и тп и у меня не выходит 100% совпадание и уровень текстов разнится)))
я психом стану с этими выравнимваниями)))*/

.work-columns {
  display: flex;
  margin-bottom: 73px;
}

.work {
  font-size: 16px;
  line-height: 24px;
  color: var(--special-black);
}

.work-large {
  font-size: 45px;
  line-height: 45px;
  color: var(--basic-black);
}

.work h3 {
  font-size: 16px;
  line-height: 24px;
  font-weight: bold;
  text-transform: uppercase;
  margin-bottom: 32px;
}

.work-small {
  margin-bottom: 40px;
}

.work h3 {
  margin-bottom: 23px;
}

.workstyle {
  justify-content: flex-end;
  /*min-height: 356px; Задать минимальную высоту равную высоте соседнего флекса не дало
  видимый результат*/
}

.workstyle-box {
  display: flex;
  flex-direction: column;
  align-items: center;
}

.workstyle-image {
  background-color: var(--background-grey);
  margin-bottom: 37px;
}

.workstyle-paragraph {
  font-size: 16px;
  line-height: 24px;
  font-weight: bold;
  margin-bottom: 31px;
}

.percent-list {
  list-style: none;
  display: flex;
  justify-content: center;
}

.percent-item {
 flex-basis: 100px;
 margin-right: 22px;
}

.workstyle p {
  font-weight: bold;
  text-transform: uppercase;
  color: var(--basic-black);
}

.workstyle-numbers {
  list-style: none;
  font-size: 45px;
  line-height: 64px;
  font-weight: bold;
  color: var(--basic-black);
  margin: 0;
  padding: 0;
}

.workstyle-description {
  list-style: none;
  font-size: 16px;
  line-height: 18px;
  color: var(--special-black);
  margin: 0;
  padding: 0;
}


/*Partners*/

.partners-list {
  background:
   url(../img/index-line.png) repeat-x top center,
   url(../img/index-line.png) repeat-x bottom center;
  padding: 66px 0;
  list-style: none;
  text-align: center;
  width:960px;
  margin: 0 auto;
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  margin-bottom: 80px;
}

.partners-item {
  opacity: 0.2;
}

.partners-item:hover,
.partners-item:focus {
  opacity: 1;
}

.partners-item:active {
  opacity: 0.1;
}

/*Footer*/

/*И это тоже мой максимум понимания)) На макете - все красиво и одинаково,
у меня все красиво, но неодинаково)) не знаю, почему. Догадываюсь, что дело в позиционировании
но я не совсем понимаю, как позиционирование делать одинаковым для всех мониторов. К примеру, нам предложили
центрировать блоки марджин: 0 ауто; ширина 960пкс. Но на квадратик контактов в футере на карте который
это не действует, там ширина другая. А как делать автоматом - через позишн релатив. А как высчитывать
топ-лефт-боттом и тп - см макет. Посмотрела, сделала, но с центрированными элементами сверху, с тем же предыдущим
блоком - края не совпадают. Короче, у меня замкнутый круг в голове  выхода пока нет)) Но меня радует,
что хоть похоже на макет теперь))) */

.footer-contacts {
  background-image: url(../img/map.png);
  height: 416px;
  margin-bottom: 75px;
}

.contacts-container {
  position: relative;
  top: 54px;
  bottom: 54px;
  left: 140px;
  width: 319px;
  background-color: var(--basic-white);
  height: 308px;
}

.padding-container {
  padding: 50px;
}

.footer-contacts h3 {
  font-size: 18px;
  line-height: 30px;
  font-weight: bold;
  text-transform: uppercase;
  color: var(--basic-black);
}

.footer-contacts p,
.footer-contacts a {
  font-size: 16px;
  line-height: 18px;
  color: var(--footer-contacts)
}

.footer-contacts button {
  width: 219px;
  height: 50px;
}

.contact-phone {
  text-decoration: none;
  font-size: 16px;
  line-height: 18px;
  color: var(--footer-contacts)
}


/*Footer-promo*/

.footer-container {
  width: 960px;
  margin: 0 auto;
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.visually-hidden {
  display: none;
}

.footer-list {
  list-style: none;
  display: flex;
}

.footer-item {
  margin-right: 9px;
}

.social-button {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 81px;
    height: 81px;
    border-radius: 50%;
}

.vk {
  background: url(../img/vk-icon.png) center no-repeat var(--social-button-grey);
}

.fb {
  background: url(../img/fb-icon.png) center no-repeat var(--social-button-grey);
}

.insta {
  background: url(../img/insta-icon.png) center no-repeat var(--social-button-grey);
}

.footer-promo {
  display: flex;
  flex-direction: column;
}

.vk:hover,
.vk:focus {
  background: url(../img/vk-icon.png) center no-repeat var(--basic-salmon);
}

/*Не понимаю, как сделать кнопки соц сетей, чтобы пр клике опэсити была только у самих иконок.
Попробовала вот так задать (и вб и инста то же самое) через ргба, но ничего не выходит.
Соответственно, если задать опэсити всему элементу - там полностью кружок будет задействован.*/

.vk:active {
  background-image: url(../img/vk-icon.png) rgba(255,255,255,0.3);
  background-color: var(--active-red);
}

.fb:hover,
.fb:focus {
  background: url(../img/fb-icon.png) center no-repeat var(--basic-salmon);
}

.fb:active {
  background-image: url(../img/fb-icon.png) rgba(255,255,255,0.3);
  background-color: var(--active-red);
}

.insta:hover,
.insta:focus {
  background: url(../img/insta-icon.png) center no-repeat var(--basic-salmon);
}

.insta:active {
  background-image: url(../img/insta-icon.png) rgba(255,255,255,0.3);
  background-color: var(--active-red);
}


.promo-large {
  font-weight: bold;
  font-size: 36px;
  line-height: 36px;
  color: var(--basic-black);
  margin: 0;
  padding-bottom: 10px;
}

.promo-small {
  font-size: 16px;
  line-height: 22px;
  color: var(--footer-promo);
  margin: 0;
}

/*Страница каталога*/

.catalog-header {
  font-size: 55px;
  line-height: 55px;
  text-align: center;
  width: 960px;
  margin: 0 auto;
}

.shop-wrap {
  background-color: var(--background-grey);
  padding-top: 87px;
  padding-bottom: 108px;
}

.shop {
font-weight: 500;
font-size: 55px;
line-height: 55px;
text-align: center;
width: 960px;
margin: 0 auto;
}

.sorting-header {
  font-weight: bold;
  font-size: 18px;
  line-height: 30px;
  text-transform: uppercase;
  color: var(--basic-black);
  margin-left: 120px;
}
 /*Sorting*/

.sorting-container {
  width: 960px;
  margin: 0 auto;
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.sorting-list {
  display: flex;
}

.sorting-item {
  list-style: none;
  font-size: 14px;
  line-height: 18px;
  text-transform: uppercase;
  margin-left: 40px;
  min-width: 60px;
}


/*Box*/

.box {
  font-size: 16px;
  line-height: 20px;
  color: var(--special-black);
  width: 960px;
  margin: 0 auto;
  display: grid;
  grid-template-columns: 260px 1fr;
  gap: 40px;
}

.price {
  grid-column: 1/2;
}

.box-header {
  font-weight: bold;
  font-size: 18px;
  line-height: 30px;
  text-transform: uppercase;
  color:var(--basic-black);
}

.price-carusel {
  /*Пока не буду центрировать элемент, мне кажется сейчас это не нужно, не по заданию, и не хочу наворотить*/
  width: 260px;
  height: 80px;
  left: 140px;
  top: 488px;
  background-color: var(--background-grey);
}

.price-container {
  display: flex;
  justify-content: space-between;
}

.from {
  display: flex;
  justify-content: space-between; /*Не понимаю, почему отступы не появляются между р и инпут*/
}

.to {
  display: flex;
  justify-content: space-between; /*Не понимаю, почему отступы не появляются между р и инпут*/
}

.price-rank {
  font-size: 16px;
  line-height: 22px;
  text-transform: uppercase;
}

.price-number {
  font-size: 16px;
  line-height: 22px;
  text-transform: uppercase;
  width: 80px;
  height: 38px;
  left: 172px;
  top: 582px;
  background-color: var(--background-grey);
}

.box-button {
  font-size: 16px;
  line-height: 18px;
  color: var(--basic-black);
  background-color: var(--background-grey);
  font-weight: medium;
}


/*Clients*/

.clients-list {
  list-style: none;
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 41px;
}

.pagination {
  grid-column: 1/2;
}

.pagination-list {
  list-style: none;
  display: flex;
  max-width: 440px;
  justify-content: space-between;
}


.pagination-item {
  width: 50px;
  height: 50px;
  font-weight: 500;
  font-size: 16px;
  line-height: 18px;
  text-transform: uppercase;
  color: var(--basic-black);
  background-color: var(--background-grey);
}

.previous {
  width: 260px;
  display: none
}

.next {
  width: 260px;
}

.active {
  background-color: var(--basic-white);
  border: 1px solid var(--basic-grey);
}

.pagination-item:hover,
.pagination-item:focus {
  background-color: var(--hover-grey);
}

